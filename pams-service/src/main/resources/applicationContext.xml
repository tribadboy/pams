<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://mybatis.org/schema/mybatis-spring 
                        http://mybatis.org/schema/mybatis-spring.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd">  
    
    <!-- 可以通过注解方式进行配置 -->
    <context:annotation-config />
                        
    <!-- 自动扫描的service路径 -->  
    <context:component-scan base-package="com.nju.pams.biz.service" />  
    <context:component-scan base-package="com.nju.pams.cacheable.service" />  
    
    <!-- mysql和redis配置参数文件 -->  
    <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">
        	<list>
        		<value>classpath:db/db.properties</value>
        		<value>classpath:redis.properties</value>
        	</list>
        </property>
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">  
        <property name="driverClassName" value="${db.driver}" />  
        <property name="url" value="${db.url}" />  
        <property name="username" value="${db.username}" />  
        <property name="password" value="${db.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${db.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${db.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${db.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${db.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${db.maxWait}"></property>  
    </bean>  
  
    <!-- 配置sqlSessionFactory -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="configLocation" value="classpath:mybatis-conf.xml"/>  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <!-- mybatis基于注解的自定义扫描 -->
    <mybatis:scan base-package="com.nju.pams.mapper.dao"
                  annotation="com.nju.pams.util.annotation.DAOMapper"
                  factory-ref="sqlSessionFactory"
    />
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!-- 支持事务处理的注解方式 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    
    <!-- 导入redis的端相关配置 -->
    <import resource="classpath:redis-conf.xml"/>
    
    <!-- 导入shiro的相关配置 -->
	<import resource="classpath:shiro-conf.xml" />
	
	<!-- 导入kaptcha的相关配置 -->
	<import resource="classpath:kaptcha-conf.xml" />
  
</beans>  